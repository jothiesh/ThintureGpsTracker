# ============================================
# THINTURE GPS TRACKER - 500 DEVICE CONFIGURATION
# ============================================

# Application Info
spring.application.name=ThintureGpsTracker
server.port=8182
spring.profiles.active=dev

# ============================================
# ðŸ”¥ CRITICAL: AOP PROXY CONFIGURATION
# ============================================
spring.aop.proxy-target-class=true

# ============================================
# MYSQL DATABASE CONFIGURATION FOR 500 DEVICES
# ============================================
spring.datasource.url=jdbc:mysql://thinturedb.c3oqsa2ui3r2.ap-south-1.rds.amazonaws.com:3306/ThintureGpsTrackerDB4?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&cachePrepStmts=true&useServerPrepStmts=true
spring.datasource.username=admin
spring.datasource.password=Thinture24
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration for 500 devices
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.defer-datasource-initialization=true

# ðŸ”¥ Hibernate Naming Strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# ðŸ”¥ DATABASE POOL OPTIMIZED FOR 500 DEVICES
spring.datasource.hikari.maximum-pool-size=40
spring.datasource.hikari.minimum-idle=15
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=15000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.leak-detection-threshold=30000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.connection-init-sql=SET time_zone='+00:00'

# ============================================
# ðŸ”¥ MQTT CONFIGURATION FOR 500 DEVICES
# ============================================
mqtt.enabled=true
mqtt.broker-url=tcp://3.109.116.92:1883
mqtt.client-id=spring-client-500dev
mqtt.topics=GPS/+/location,GPS/+/status,Testr,TT,TTT
mqtt.username=Thinture
mqtt.password=Thinture24
mqtt.keep-alive-interval=45
mqtt.automatic-reconnect=true
mqtt.clean-session=true
mqtt.qos=1

# ðŸ”¥ MQTT CONNECTION POOL FOR 500 DEVICES
mqtt.service.mode=pool
mqtt.connection.pool.size=20
mqtt.connection.pool.max-size=35
mqtt.connection.pool.max-inflight=1000
mqtt.connection.timeout=15

# ============================================
# ðŸ”¥ THREAD POOLS FOR 500 DEVICES (CRITICAL!)
# ============================================
spring.task.execution.pool.core-size=30
spring.task.execution.pool.max-size=150
spring.task.execution.pool.queue-capacity=2000
spring.task.execution.thread-name-prefix=gps-500-
spring.task.execution.pool.allow-core-thread-timeout=true
spring.task.execution.pool.keep-alive=60s

spring.task.scheduling.pool.size=15
spring.task.scheduling.thread-name-prefix=gps-scheduler-500-

# ============================================
# ðŸ”¥ HEALTH MONITORING FOR 500 DEVICES
# ============================================
mqtt.health.message-timeout-ms=180000
mqtt.health.min-connections=15
mqtt.health.max-failure-rate=8.0
mqtt.health.cpu-threshold=75.0
mqtt.health.memory-threshold=80.0
mqtt.health.device-timeout-ms=300000

# Circuit breaker for 500 devices
mqtt.health.circuit-breaker.failure-threshold=10
mqtt.health.circuit-breaker.timeout-ms=30000
mqtt.health.circuit-breaker.half-open-max-calls=5

# ============================================
# ðŸ”¥ BATCH PROCESSING FOR 500 DEVICES
# ============================================
batch.size=300
batch.flush.interval=800
gps.broadcast.batch-size=200
gps.broadcast.delay-ms=5

# ============================================
# ðŸ”¥ SERVER OPTIMIZATION FOR 500 DEVICES
# ============================================
server.tomcat.threads.max=120
server.tomcat.threads.min-spare=30
server.tomcat.max-connections=800
server.tomcat.accept-count=300
server.tomcat.connection-timeout=15000

# Enable compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
server.compression.min-response-size=1024

# ============================================
# ðŸ”¥ JPA BATCH OPTIMIZATION
# ============================================
spring.jpa.properties.hibernate.jdbc.batch_size=300
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# ============================================
# SECURITY CONFIGURATION
# ============================================
spring.security.enabled=true

# ============================================
# THYMELEAF CONFIGURATION
# ============================================
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=true

# ============================================
# ACTUATOR CONFIGURATION FOR 500 DEVICES
# ============================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.tags.application=${spring.application.name}
management.metrics.export.prometheus.enabled=true

# ============================================
# ERROR HANDLING
# ============================================
server.error.whitelabel.enabled=false
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on-param

# ============================================
# EXTERNAL SERVICES
# ============================================
twilio.account.sid=YOUR_TWILIO_ACCOUNT_SID_HERE
twilio.auth.token=YOUR_TWILIO_AUTH_TOKEN_HERE
# ============================================
# WEBSOCKET CONFIGURATION
# ============================================
websocket.endpoint=/ws-location
websocket.app.destination.prefix=/app
websocket.broker.prefix=/topic
app.server.url=http://localhost:8182

# ============================================
# FLYWAY CONFIGURATION (DISABLED)
# ============================================
spring.flyway.enabled=false
spring.flyway.check-version=false

# ============================================
# GPS TRACKING CONFIGURATION FOR 500 DEVICES
# ============================================
gps.validation.max-speed=300.0
gps.validation.max-future-minutes=5
gps.validation.max-past-hours=24

# GPS Performance Settings for 500 devices
gps.performance.cpu-warning-threshold=75.0
gps.performance.memory-warning-threshold=80.0

# ============================================
# ðŸ”¥ LOGGING OPTIMIZED FOR 500 DEVICES
# ============================================
logging.level.root=INFO
logging.level.com.GpsTracker.Thinture=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.mysql=WARN
logging.level.com.zaxxer.hikari=INFO

# MQTT logging reduced for 500 devices
logging.level.org.eclipse.paho.client.mqttv3=WARN
logging.level.org.springframework.integration.mqtt=WARN

# File logging optimized
logging.file.name=logs/gps-tracker-500dev.log
logging.file.max-size=100MB
logging.file.max-history=10
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(%5p) %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

# ============================================
# DEVELOPMENT TOOLS
# ============================================
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# ============================================
# SPRING CONFIGURATION
# ============================================
spring.main.allow-bean-definition-overriding=true
spring.jmx.enabled=true

# ============================================
# MULTIPART CONFIGURATION
# ============================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ============================================
# TIMEZONE AND TIMESTAMP CONFIGURATION
# ============================================
spring.jackson.deserialization.adjust-dates-to-context-time-zone=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
app.timestamp.storage.mode=RAW

# ============================================
# JVM OPTIMIZATION FOR 500 DEVICES
# ============================================
# Add these JVM arguments when starting:
# -Xms2g -Xmx4g -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:+UseStringDeduplication

# ============================================
# PERFORMANCE MONITORING
# ============================================
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.distribution.sla.http.server.requests=50ms,100ms,200ms,300ms

# Ensure autocommit is disabled
spring.datasource.hikari.auto-commit=false

# Or explicitly set it
spring.datasource.hikari.connection-init-sql=SET autocommit = 0